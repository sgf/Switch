/// @file
/// @brief Contains Switch::System::EventHandler delegate.
#pragma once

#include "../Types.hpp"
#include "Delegate.hpp"
#include "EventArgs.hpp"
#include "Object.hpp"

/// @brief The Switch namespace contains all fundamental classes to access Hardware, Os, System, and more.
namespace Switch {
  /// @brief The System namespace contains fundamental classes and base classes that define commonly-used value and reference data types, events and event handlers, interfaces, attributes, and processing exceptions.
  namespace System {
    /// @brief Represents the method that will handle an event that has no event data.
    /// @par Library
    /// Switch.Core
    /// @param sender The source of the event.
    /// @param e An System::EventArgs that contains no event data.
    /// @par Examples
    /// This example show how to use EventHandler for two instance method.
    /// @include EventHandler.cpp
    /// @par Examples
    /// This example show how to used a specialized EventHandler.
    /// @include SpecializedEventHandler.cpp
    using EventHandler = Delegate<void, const Object&, const EventArgs&>;

    /// @brief Represents the method that will handle an event when the event provides data.
    /// @param TEventArgs The type of the event data generated by the event.
    /// @param sender The source of the event.
    /// @param e An object that contains the event data.
    template<typename T = const EventArgs&>
    using GenericEventHandler = Delegate<void, const object&, T>;
  }
}

using namespace Switch;
